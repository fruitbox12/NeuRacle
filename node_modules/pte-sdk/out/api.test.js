"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
require("isomorphic-fetch");
const api_1 = require("./api");
const manifest_1 = require("./manifest");
const systemComponent = '020000000000000000000000000000000000000000000000000002';
const radixToken = '030000000000000000000000000000000000000000000000000004';
const testManifest = 'CLEAR_AUTH_ZONE;';
const testNonce = 3880673815;
const testPublicKey = '043faf148413e171e2089012faacc0577d7a29aeddf25207bcf04a8768f5fe834f66585958e6ff091d1df7505c18c900e6a58b0631f98d1aa7e28630481e28e617';
const testSignature = 'aab1f69d997c5c3f27c30d9b8a97aa74c0797f41b0c5ee4e5c2ab1edfe1e9ce8114ad35f84c9bd7de1a4a0370a1bca5dea668ae554482232fd885d3f13458085';
describe('PTE API tests', function () {
    it('Test /component', function () {
        return __awaiter(this, void 0, void 0, function* () {
            const api = new api_1.DefaultApi();
            const component = yield api.getComponent({
                address: systemComponent
            });
            console.log(component);
        });
    });
    it('Test /resource', function () {
        return __awaiter(this, void 0, void 0, function* () {
            const api = new api_1.DefaultApi();
            const resource = yield api.getResource({ address: radixToken });
            console.log(resource);
        });
    });
    it('Test /nonce', function () {
        return __awaiter(this, void 0, void 0, function* () {
            const api = new api_1.DefaultApi();
            const nonce = yield api.getNonce({ signers: [testPublicKey] });
            console.log(nonce);
        });
    });
    it('Test /transaction', function () {
        return __awaiter(this, void 0, void 0, function* () {
            const api = new api_1.DefaultApi();
            const receipt = yield api.submitTransaction({
                transaction: {
                    manifest: testManifest,
                    nonce: {
                        value: testNonce
                    },
                    signatures: [
                        {
                            publicKey: testPublicKey,
                            signature: testSignature
                        }
                    ]
                }
            });
            console.log(receipt);
            const tx = yield api.getTransaction({ hash: receipt.transactionHash });
            console.log(tx);
            const re = yield api.getReceipt({ hash: receipt.transactionHash });
            console.log(receipt);
        });
    });
    it('Test account creation', function () {
        return __awaiter(this, void 0, void 0, function* () {
            const manifest = new manifest_1.ManifestBuilder()
                .newAccount(testPublicKey)
                .build();
            const api = new api_1.DefaultApi();
            const nonce = yield api.getNonce({ signers: [testPublicKey] });
            const receipt = yield api.submitTransaction({
                transaction: {
                    manifest: manifest.toString(),
                    nonce,
                    signatures: []
                }
            });
            console.log(receipt);
        });
    });
});
//# sourceMappingURL=api.test.js.map